WaitGroup в Go (пакет sync) — это инструмент для управления синхронизацией в многопоточных приложениях. 
Он используется для ожидания завершения группы горутин. 

Основные концепции:

    1. Инициализация: Создается переменная типа sync.WaitGroup.
    2. Добавление задач: Вызывается метод Add(int), чтобы указать количество горутин, которые будут выполняться.
    3. Сигнал завершения: Каждая горутина вызывает метод Done(), когда заканчивает свою работу.
    4. Ожидание завершения всех горутин: Основной поток вызывает Wait(), чтобы блокироваться до завершения всех горутин.

Это особенно полезно для управления завершением набора горутин без явного использования каналов.